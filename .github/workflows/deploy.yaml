name: VPS Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Echo
        run: |
          echo ${{ vars.VPS_HOST }}
          echo ${{ vars.VPS_USERNAME }}

      - name: Update Git Repository in VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.VPS_HOST }}
          username: ${{ vars.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd ${{ vars.VPS_WORKDIR}}
            git fetch origin
            git reset --hard origin/main  # Reset to the latest commit on 'main' branch

      - name: Build and Run Docker Images in VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ vars.VPS_HOST }}
          username: ${{ vars.VPS_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd ${{ vars.VPS_WORKDIR}}

            # Stop and remove existing container if running
            if docker ps -a --format '{{.Names}}' | grep -Eq "^rully$"; then
                # If the container exists, stop and remove it
                docker stop rully
                docker rm rully
            else
                echo "Container 'rully' does not exist."
            fi

            # Check if the image exists
            if docker images --format '{{.Repository}}:{{.Tag}}' | grep -Eq "^rully:"; then
                # If the image exists, remove it
                docker image rm rully
            else
                echo "Image 'rully' does not exist."
            fi

            # Build Docker image from the updated repository
            docker build -t rully .

            # Run Docker container with port mapping
            docker run -d --name rully -p 8000:8000 rully

            # Clean up unused Docker images (optional, use with caution)
            docker image prune -f
